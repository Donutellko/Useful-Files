Источники: 
	Технострим: Highload (Александр Быков)
	Блог Авито habrahabr.ru/company/avito/blog/321796/
	
Веб-приложение: интернет-барахолка (Авито, eBay, Юла, проч)

Ориентировочные нагрузки: 
	БД: 10ТБ 
	изображения: 250ТБ
	запросы: >10 000 в секунду

Приоритеты: 
* качественный поиск. Юзер подождёт появления выдачи и прогрузки изображений дольше ради того, чтобы меньше времени потратить на поиск необходимого
* защита пользовательских данных от автоматизированного сбора или взлома БД.

Итог: 
	поиск: Sphinx
	сервер: Linux
	фронтенд + базовая балансировка: Nginx
	бекенд: Apache?
	бд: PostgreSQL, Oracle, MariaDB (хорошая документация, опенсорсность, поддержка современных стандартов SQL)
	кэш: Memcached, Tarantool
	балансировка: HAProxy
	
Нагрузка на бекенд:
	Поисковая технология: поисковая машина+, индексатор объявлений
	Анализ новых объявлений
		компьютерное зрение: 
			определение/проверка категории
			отсев спама
			использование чужих изображений
		ручная модерация
		правки объявлений для индексации
			ошибки
			сленг

Распределение нагрузки:
	пользователи выбирают интересующий регион перед использованием ресурса
		выделение серверов прямо пропорционально населению региона
		запросы обрабатывает сервер, ближайший к пользователю (чего не может добиться обычный DNS)
		большинство интересуется локальными объявлениями
			основной ресурс и приоритет поиска выделяется под локальные объявления
	количество одинаковых запросов достаточно велико, уместно кеширование
	несколько поисковых серверов, 

Выбор технологий. 
	Приоритеты: 
		популярные: большинство ошибок уже найдены)
		свободные: можно дорабатывать под собственные нужды

БД:
	Master-slave, 
	для контроля Redis: 
		репликация
		мониторинг
		уведомляет об ошибках
		автоматически промотирует slave до master в случае его недоступности
	отложенная репликация

Поиск:
	варианты
		Sphinx, Lastic, SM
	анализ работы движка
	анализ медленных запросов
	исправление ошибок и сленга

Индексация: 
	параллельная для различных категорий
	Delta-index медленнее
	RealTime-индекс позволит убрать задержки
	в Sphinx: отсутсвие индекса по атрибутам
 
Деплой индексов на сервера:
	Rsync - надёжный и простой, медленный
	Torrent base - быстрый и надёжный, но забивающий сеть
	UFTP - броадкаст: быстрый, не гарантирует доставку, сложен в настройке
	
	решение: UFTP + досылка повреждённых Rsync
	
Репликация Master-Slave для БД, шардирование для различных регионов